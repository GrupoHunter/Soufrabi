Object subclass: #ExampleOS	instanceVariableNames: 'bli blu'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-Soufrabi'!!ExampleOS methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:53'!bli	^ bli! !!ExampleOS methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:53'!bli: anObject	bli := anObject! !!ExampleOS methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:53'!blu	^ blu! !!ExampleOS methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:53'!blu: anObject	blu := anObject! !!ExampleOS methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 23:19'!nah: aNumber	^aNumber * 2! !Object subclass: #ExampleO	instanceVariableNames: 'bla ble'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-Soufrabi'!!ExampleO methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:29'!bla	^ bla! !!ExampleO methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:29'!bla: anObject	bla := anObject! !!ExampleO methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:29'!ble	^ ble! !!ExampleO methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 22:29'!ble: anObject	ble := anObject! !Object subclass: #IVDelegator	instanceVariableNames: 'anObject'	classVariableNames: ''	poolDictionaries: ''	category: 'OOP-Soufrabi'!!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 22:58'!sendMessage: aMessage	"Sends message to referenced object"	(self anObject respondsTo: aMessage)		ifTrue:[ ^self anObject perform: aMessage ]		ifFalse:[ ^self sendMessageToObjectIV: aMessage ]! !!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 23:36'!sendMessage: aMessage with: param	"Sends message with param to referenced object"	(self anObject respondsTo: aMessage)		ifTrue:[ ^self anObject perform: aMessage with: param ]		ifFalse:[ ^self sendMessageToObjectIV: aMessage with: param ]! !!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 23:41'!sendMessage: aMessage withArguments: args	"Sends message with arguments to referenced object"		(self anObject respondsTo: aMessage)		ifTrue:[ ^self anObject perform: aMessage withArguments: args ]		ifFalse:[ ^self sendMessageToObjectIV: aMessage withArguments: args ]! !!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 23:23'!sendMessageToObjectIV: aMessage	"Sends message to referenced object instVars"	self anObject class instVarNames do:[ :each | ((self anObject instVarNamed: each) class canUnderstand: aMessage)														ifTrue:[ ^(self anObject instVarNamed: each) perform: aMessage ] ].! !!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 23:31'!sendMessageToObjectIV: aMessage with: param	"Sends message to referenced object instVars"	self anObject class instVarNames do:[ :each | ((self anObject instVarNamed: each) class canUnderstand: aMessage)														ifTrue:[ ^(self anObject instVarNamed: each) 																	perform: aMessage with: param] ].! !!IVDelegator methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 23:40'!sendMessageToObjectIV: aMessage withArguments: args	"Sends message to referenced object instVars"	self anObject class instVarNames do:[ :each | ((self anObject instVarNamed: each) class canUnderstand: aMessage)														ifTrue:[ ^(self anObject instVarNamed: each) 																	perform: aMessage withArguments: args] ].! !!IVDelegator methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 21:00'!anObject	^ anObject! !!IVDelegator methodsFor: 'accessing' stamp: 'DaminCravacuore 11/1/2013 21:02'!anObject: object	anObject := object! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!IVDelegator class	instanceVariableNames: ''!!IVDelegator class methodsFor: 'as yet unclassified' stamp: 'DaminCravacuore 11/1/2013 22:47'!on: anObject	^(IVDelegator new) anObject: anObject.! !